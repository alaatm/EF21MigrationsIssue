// <auto-generated />
using System;
using EF21MigrationsIssue;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Metadata.Internal;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;

namespace EF21MigrationsIssue.Migrations
{
    [DbContext(typeof(TestDbContext))]
    partial class TestDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.0-preview1-28290")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("EF21MigrationsIssue.Bonus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("ConquerorAmount");

                    b.Property<bool>("ConquerorsPoints");

                    b.Property<bool>("MultipliesPoints");

                    b.Property<int?>("MultiplyFactor");

                    b.Property<string>("Name");

                    b.Property<double?>("Price");

                    b.Property<bool>("RequireSuccess");

                    b.HasKey("Id");

                    b.ToTable("Bonuses");

                    b.SeedData(new[]
                    {
                        new { Id = 1, ConquerorsPoints = false, MultipliesPoints = false, Name = "J", Price = 0.2, RequireSuccess = false },
                        new { Id = 2, ConquerorsPoints = false, MultipliesPoints = false, Name = "S", Price = 0.5, RequireSuccess = false },
                        new { Id = 3, ConquerorsPoints = false, MultipliesPoints = true, MultiplyFactor = 2, Name = "D", Price = 0.5, RequireSuccess = false },
                        new { Id = 4, ConquerorAmount = 1, ConquerorsPoints = true, MultipliesPoints = false, Name = "I", Price = 0.5, RequireSuccess = true },
                        new { Id = 5, ConquerorAmount = 1, ConquerorsPoints = true, MultipliesPoints = false, Name = "F", Price = 0.5, RequireSuccess = true },
                        new { Id = 6, ConquerorsPoints = false, MultipliesPoints = false, Name = "G", Price = 0.5, RequireSuccess = false },
                        new { Id = 7, ConquerorAmount = 2, ConquerorsPoints = true, MultipliesPoints = false, Name = "J", RequireSuccess = false },
                        new { Id = 8, ConquerorsPoints = false, MultipliesPoints = false, Name = "Y", Price = 0.5, RequireSuccess = false }
                    });
                });
#pragma warning restore 612, 618
        }
    }
}
